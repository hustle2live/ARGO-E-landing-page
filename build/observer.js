const animationIn="customAnimationIn",animationScale="customAnimationScale",servicesContainer=document.querySelector(".services__content.container"),elementsCard=document.querySelectorAll(".services__card.animated"),elementsIcon=document.querySelectorAll(".icon.animated"),defaultOptions={threshold:[.5]},observer=(e,n=defaultOptions)=>new IntersectionObserver(e,n),onEntryCallback=(e,n)=>{e.forEach(e=>{e.isIntersecting?e.target.classList.add(n):e.target.classList.remove(n)})},servicesCallback=e=>{e.forEach(e=>{if(e.isIntersecting)for(const e of elementsCard)e.classList.add(animationIn);else for(const e of elementsCard)e.classList.remove(animationIn)})};observer(servicesCallback,{threshold:[.25]}).observe(servicesContainer);for(const e of elementsIcon)observer(e=>onEntryCallback(e,animationScale)).observe(e);